#include <Windows.h>
#include <stdio.h>

CRITICAL_SECTION cs;

DWORD WINAPI ThreadProc(LPVOID lpParameter)
{
    int threadNum = (int)(size_t)lpParameter;
    for (int x = 0; x < 5; x++)
    {
        EnterCriticalSection(&cs);

        Sleep(100);

        printf("Thread %d: LockCount=%x RecursionCount=%x OwningThread=%x\n",
            threadNum, cs.LockCount, cs.RecursionCount, cs.OwningThread);

        LeaveCriticalSection(&cs);
    }
    return 0;
}

int main(int argc, char* argv[])
{
    InitializeCriticalSection(&cs);

    printf("Main Thread:%x %x %x\n", cs.LockCount, cs.RecursionCount, cs.OwningThread);

    // 创建多个线程，每个线程传入自己的编号
    HANDLE threads[4];
    for (int i = 0; i < 4; i++)
    {
        threads[i] = CreateThread(NULL, 0, ThreadProc, (LPVOID)(size_t)(i + 1), 0, NULL);
    }

    // 等待所有线程结束
    WaitForMultipleObjects(4, threads, TRUE, INFINITE);

    // 关闭线程句柄
    for (int i = 0; i < 4; i++)
    {
        CloseHandle(threads[i]);
    }

    DeleteCriticalSection(&cs);

    return 0;
}